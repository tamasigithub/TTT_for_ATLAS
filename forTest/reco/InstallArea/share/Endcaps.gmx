<!-- CNL_n meanings:
  n Meaning          Range
  0 SCT Envelope      0
  1 Endcap - or +     0 - 1
  2 Endcap            0 - 0
  3 Wheel             0 - 5
  4 Pair              0 - 15
  5 Petal             0 - 1
  6 Face              0 - 1
  7 Module 	      0 - big; not used and not zeroed
  8 Sensor            0 - big; not used and not zeroed

-->

&endcapdefines;
&endcaphybrids;
&petalplank;
&endcapsupports;

<assembly name="ECModule0">
  
  <logvolref ref="ECSensor0"/>
  <transform>
    <transformation name="PlaceR0H0">
      <translation z="(SensorThickness + E_HybridT) / 2."/>
    </transformation>
    <assemblyref ref="ECHybridR0H0"/>
  </transform>
  <transform>
    <transformation name="PlaceR0H1">
      <translation z="(SensorThickness + E_HybridT) / 2."/>
    </transformation>
    <assemblyref ref="ECHybridR0H1"/>
  </transform>

  <transform>
    <transformation name="PlaceDCDC_R0_PCB">
      <translation z="(SensorThickness + DCDC_PCB_T) / 2."/>
    </transformation>
    <logvolref ref="DCDC_EC_PCBR0"/>
  </transform>
  <transform>
    <transformation name="PlaceDCDC_R0_Box">
      <rotation zcos="1.0" angle="-SensorPhiWidth_0/2+E_DCDC_PCB_dPhiR0"/>	
      <translation  x="DCDC_EC_BoxL+DCDC_dist_from_PCBend" y="E_DCDC_PCB_RadiusMinR0+0.5*DCDC_BoxW" z="(SensorThickness + 2*DCDC_PCB_T + DCDC_BoxT)/2+EPS"/>
    </transformation>
    <logvolref ref="DCDC_EC_Box"/>
  </transform>
</assembly>

<assembly name="ECModule1">
  <logvolref ref="ECSensor1"/>
  <transform>
    <transformation name="PlaceR1H0">
      <translation z="(SensorThickness + E_HybridT) / 2."/>
    </transformation>
    <assemblyref ref="ECHybridR1H0"/>
  </transform>
  <transform>
    <transformation name="PlaceR1H1">
      <translation z="(SensorThickness + E_HybridT) / 2."/>
    </transformation>
    <assemblyref ref="ECHybridR1H1"/>
  </transform>
  <transform>
    <transformation name="PlaceDCDC_R1_PCB">
      <translation z="(SensorThickness + DCDC_PCB_T) / 2."/>
    </transformation>
    <logvolref ref="DCDC_EC_PCBR1"/>
  </transform>
  <transform>
    <transformation name="PlaceDCDC_R1_Box">
      <rotation zcos="1.0" angle="-SensorPhiWidth_1/2+E_DCDC_PCB_dPhiR1"/> 
<!-- need to subtract half the length of DCDC  DCDC_EC_BoxL/(2*E_DCDC_PCB_RadiusMinR1)"/>-->
      <translation  x="DCDC_EC_BoxL+DCDC_dist_from_PCBend" y="E_DCDC_PCB_RadiusMinR1+0.5*DCDC_BoxW" z="(SensorThickness + 2*DCDC_PCB_T+DCDC_BoxT)/2+EPS"/>
    </transformation>
    <logvolref ref="DCDC_EC_Box"/>
  </transform>
</assembly>

<assembly name="ECModule2">
  <logvolref ref="ECSensor2"/>
  <transform>
    <transformation name="PlaceR2H0">
      <translation z="(SensorThickness + E_HybridT) / 2."/>
    </transformation>
    <assemblyref ref="ECHybridR2H0"/>
  </transform>
  <transform>
    <transformation name="PlaceDCDC_R2_PCB">
      <translation z="(SensorThickness + DCDC_PCB_T) / 2."/>
    </transformation>
    <logvolref ref="DCDC_EC_PCBR2"/>
  </transform>
  <transform>
    <transformation name="PlaceDCDC_R2_Box">
      <rotation zcos="1.0" angle="-SensorPhiWidth_2/2+E_DCDC_PCB_dPhiR2"/>	
      <translation  x="DCDC_EC_BoxL+DCDC_dist_from_PCBend" y="E_DCDC_PCB_RadiusMinR2+0.5*DCDC_BoxW" z="+(SensorThickness + 2*DCDC_PCB_T+DCDC_BoxT)/2+EPS"/>
    </transformation>
    <logvolref ref="DCDC_EC_Box"/>
  </transform>
</assembly>

<assembly name="ECModule3Plus">
  <logvolref ref="ECSensor3"/>
  <transform>
    <transformation name="PlaceR3H1">
      <translation z="(SensorThickness + E_HybridT) / 2."/>
    </transformation>
    <assemblyref ref="ECHybridR3H1"/>
  </transform>
  <transform>
    <transformation name="PlaceR3H3">
      <translation z="(SensorThickness + E_HybridT) / 2."/>
    </transformation>
    <assemblyref ref="ECHybridR3H3"/>
  </transform>
<transform>
    <transformation name="PlaceHCCOnB_HybridR3H1">
     <rotation zcos="1.0" angle="SensorPhiWidth_3/(2*N_ABC_R3)*(1-N_ABC_R3+2*(N_ABC_R3-1.5))"/>		
      <translation y="E_HCCRadiusR3H1+HCC_L/2"  z="(SensorThickness+2*E_HybridT + HCC_T) / 2"/>     
    </transformation>
    <logvolref ref="HCC_Chip"/>
  </transform>
<transform>
    <transformation name="PlaceHCCOnB_HybridR3H1a">
     <rotation zcos="1.0" angle="SensorPhiWidth_3/(2*N_ABC_R3)*(1-N_ABC_R3+2*(N_ABC_R3-2.5))"/>		
      <translation y="E_HCCRadiusR3H1a+HCC_L/2"  z="(SensorThickness+2*E_HybridT + HCC_T) / 2"/>     
    </transformation>
    <logvolref ref="HCC_Chip"/>
  </transform>

<transform>
    <transformation name="PlaceHCCOnB_HybridR3H3">
     <rotation zcos="1.0" angle="SensorPhiWidth_3/(2*N_ABC_R3)*(1-N_ABC_R3+2*(N_ABC_R3-2.5))"/>		
      <translation y="E_HCCRadiusR3H3+HCC_L/2"  z="(SensorThickness+2*E_HybridT + HCC_T) / 2"/>     
    </transformation>
    <logvolref ref="HCC_Chip"/>
  </transform>
<transform>
    <transformation name="PlaceHCCOnB_HybridR3H3a">
     <rotation zcos="1.0" angle="SensorPhiWidth_3/(2*N_ABC_R3)*(1-N_ABC_R3+2*(N_ABC_R3-1.5))"/>		
      <translation y="E_HCCRadiusR3H3a+HCC_L/2"  z="(SensorThickness+2*E_HybridT + HCC_T) / 2"/>     
    </transformation>
    <logvolref ref="HCC_Chip"/>
  </transform>
</assembly>

<assembly name="ECModule3Minus">
  <logvolref ref="ECSensor3"/>
  <transform>
    <transformation name="PlaceR3H0Minus">
      <translation z="(SensorThickness + E_HybridT) / 2."/>
    </transformation>
    <assemblyref ref="ECHybridR3H0"/>
  </transform>
  <transform>
    <transformation name="PlaceR3H2Minus">
      <translation z="(SensorThickness + E_HybridT) / 2."/>
    </transformation>
    <assemblyref ref="ECHybridR3H2"/>
  </transform>



  <transform>
    <transformation name="PlaceDCDC_R3_PCB">
      <translation z="(SensorThickness + DCDC_PCB_T) / 2."/>
    </transformation>
    <logvolref ref="DCDC_EC_PCBR3"/>
  </transform>

  <transform>
    <transformation name="PlaceDCDC_R3_Box">
      <rotation zcos="1.0" angle="-SensorPhiWidth_3/2+E_DCDC_PCB_dPhiR3"/>	
      <translation  x="DCDC_EC_BoxL+DCDC_dist_from_PCBend" y="E_DCDC_PCB_RadiusMinR3+0.5*DCDC_BoxW" z="(SensorThickness + 2*DCDC_PCB_T+DCDC_BoxT)/2+EPS"/>
    </transformation>
    <logvolref ref="DCDC_EC_Box"/>
  </transform>
</assembly>

<assembly name="ECModule4Plus">
  <logvolref ref="ECSensor4"/>
  <transform>
    <transformation name="PlaceR4H1">
      <translation z="(SensorThickness + E_HybridT) / 2."/>
    </transformation>
    <assemblyref ref="ECHybridR4H1"/>
  </transform>
<transform>
    <transformation name="PlaceHCCOnB_HybridR4H1">
     <rotation zcos="1.0" angle="SensorPhiWidth_4/(2*N_ABC_R4)*(1-N_ABC_R4+2*(N_ABC_R4-1.5))"/>		
      <translation y="E_HCCRadiusR4H1+HCC_L/2"  z="(SensorThickness+2*E_HybridT + HCC_T) / 2"/>     
    </transformation>
    <logvolref ref="HCC_Chip"/>
  </transform>
<transform>
    <transformation name="PlaceHCCOnB_HybridR4H1a">
     <rotation zcos="1.0" angle="SensorPhiWidth_4/(2*N_ABC_R4)*(1-N_ABC_R4+2*(N_ABC_R4-2.5))"/>		
      <translation y="E_HCCRadiusR4H1a+HCC_L/2"  z="(SensorThickness+2*E_HybridT + HCC_T) / 2"/>     
    </transformation>
    <logvolref ref="HCC_Chip"/>
  </transform>
</assembly>

<assembly name="ECModule4Minus">
  <logvolref ref="ECSensor4"/>
  <transform>
    <transformation name="PlaceR4H0">
      <translation z="(SensorThickness + E_HybridT) / 2."/>
    </transformation>
    <assemblyref ref="ECHybridR4H0"/>
  </transform>
  <transform>
    <transformation name="PlaceDCDC_R4_PCB">
      <translation z="(SensorThickness + DCDC_PCB_T) / 2."/>
    </transformation>
    <logvolref ref="DCDC_EC_PCBR4"/>
  </transform>
  <transform>
    <transformation name="PlaceDCDC_R4_Box">
      <rotation zcos="1.0" angle="-SensorPhiWidth_4/2+E_DCDC_PCB_dPhiR4"/>	
      <translation  x="DCDC_EC_BoxL+DCDC_dist_from_PCBend" y="E_DCDC_PCB_RadiusMinR4+0.5*DCDC_BoxW" z="(SensorThickness + 2*DCDC_PCB_T+DCDC_BoxT)/2+EPS"/>
    </transformation>
    <logvolref ref="DCDC_EC_Box"/>
  </transform>
</assembly>

<assembly name="ECModule5Plus">
  <logvolref ref="ECSensor5"/>
  <transform>
    <transformation name="PlaceR5H1">
      <translation z="(SensorThickness + E_HybridT) / 2."/>
    </transformation>
    <assemblyref ref="ECHybridR5H1"/>
  </transform>
<transform>
    <transformation name="PlaceHCCOnB_HybridR5H1">
     <rotation zcos="1.0" angle="SensorPhiWidth_5/(2*N_ABC_R5)*(1-N_ABC_R5+2*(N_ABC_R5-1.5))"/>		
      <translation y="E_HCCRadiusR5H1+HCC_L/2"  z="(SensorThickness+2*E_HybridT + HCC_T) / 2"/>     
    </transformation>
    <logvolref ref="HCC_Chip"/>
  </transform>
<transform>
    <transformation name="PlaceHCCOnB_HybridR5H1a">
     <rotation zcos="1.0" angle="SensorPhiWidth_5/(2*N_ABC_R5)*(1-N_ABC_R5+2*(N_ABC_R5-2.5))"/>		
      <translation y="E_HCCRadiusR5H1a+HCC_L/2"  z="(SensorThickness+2*E_HybridT + HCC_T) / 2"/>     
    </transformation>
    <logvolref ref="HCC_Chip"/>
  </transform>
</assembly>

<assembly name="ECModule5Minus">
  <logvolref ref="ECSensor5"/>
  <transform>
    <transformation name="PlaceR5H0">
      <translation z="(SensorThickness + E_HybridT) / 2."/>
    </transformation>
    <assemblyref ref="ECHybridR5H0"/>
  </transform>
  <transform>
    <transformation name="PlaceDCDC_R5_PCB">
      <translation z="(SensorThickness + DCDC_PCB_T) / 2."/>
    </transformation>
    <logvolref ref="DCDC_EC_PCBR5"/>
  </transform>
  <transform>
    <transformation name="PlaceDCDC_R5_Box">
      <rotation zcos="1.0" angle="-SensorPhiWidth_5/2+E_DCDC_PCB_dPhiR5"/>	
      <translation  x="DCDC_EC_BoxL+DCDC_dist_from_PCBend" y="E_DCDC_PCB_RadiusMinR5+0.5*DCDC_BoxW" z="(SensorThickness + 2*DCDC_PCB_T+DCDC_BoxT)/2+EPS"/>
    </transformation>
    <logvolref ref="DCDC_EC_Box"/>
  </transform>
</assembly>

<assembly name="PetalFace">
  <index ref="phi_module" value="2*CNL_4 + CNL_5"/> <!-- 0 to 31. -->

 <transform alignable="0">		 
  <transformation name="ESensor0dummy" alignable="true">
    <translation/>
  </transformation>
  <assemblyref ref="ECModule0" zeroid="true" />
</transform>
<transform alignable="0">
  <transformation name="ESensor1dummy" alignable="true">
    <translation/>
  </transformation>
  <assemblyref ref="ECModule1" zeroid="true" />
</transform>
<transform alignable="0">
  <transformation name="ESensor2dummy" alignable="true">
    <translation/>
  </transformation>
  <assemblyref ref="ECModule2" zeroid="true" />
</transform>


  <!-- For outer rings, we have to add 1 half the time; when? Depends which way round the face is in the wheel. 0 - 63. -->
  <index ref="phi_module" value="2*(2*CNL_4 + CNL_5) + (CNL_5 == 0 &amp;&amp; CNL_6 == 0) + (CNL_5 == 1 &amp;&amp; CNL_6 == 1) "/>
  <transform alignable="0">
    <transformation name="PlaceFaceRing3Minus" alignable="true">
      <rotation zcos="1.0" angle="-SensorRotation_3"/>
    </transformation>
    <assemblyref ref="ECModule3Minus"/>
  </transform>

  <transform alignable="0">
    <transformation name="PlaceFaceRing4Minus" alignable="true">
      <rotation zcos="1.0" angle="-SensorRotation_4"/>
    </transformation>
    <assemblyref ref="ECModule4Minus"/>
  </transform>

  <transform alignable="0">
    <transformation name="PlaceFaceRing5Minus" alignable="true">
      <rotation zcos="1.0" angle="-SensorRotation_5"/>
    </transformation>
    <assemblyref ref="ECModule5Minus"/>
  </transform>
<index ref="phi_module" value="2*(2*CNL_4 + CNL_5) + (CNL_5 == 0 &amp;&amp; CNL_6 == 1) + (CNL_5 == 1 &amp;&amp; CNL_6 == 0)"/>
  <transform alignable="0">
    <transformation name="PlaceFaceRing3Plus" alignable="true">
      <rotation zcos="1.0" angle="+SensorRotation_3"/>
    </transformation>
    <assemblyref ref="ECModule3Plus" />
  </transform>

  <transform alignable="0">
    <transformation name="PlaceFaceRing4Plus" alignable="true">
      <rotation zcos="1.0" angle="+SensorRotation_4"/>
    </transformation>
    <assemblyref ref="ECModule4Plus" />
  </transform>

  <transform alignable="0">
    <transformation name="PlaceFaceRing5Plus" alignable="true">
      <rotation zcos="1.0" angle="+SensorRotation_5"/>
    </transformation>
    <assemblyref ref="ECModule5Plus" />
  </transform>
</assembly>


<assembly name="Petal">
  <assemblyref ref="PetalPlank"/>

  <transform name="NearFace">
    <transformation name="PlacePetalFaceNear">
      <translation z="-(PetalCoreThickness + SensorThickness)/2"/>
      <rotation xcos="1." angle="PI"/> 
      <rotation zcos="1." angle="PetalFaceRotation"/>
    </transformation>
    <assemblyref ref="PetalFace" zeroid="true"/>
  </transform>

  <transform name="FarFace">
      <transformation name="PlacePetalFaceFar">
        <translation z="(PetalCoreThickness + SensorThickness)/2"/>
        <rotation zcos="1." angle="PetalFaceRotation"/>
      </transformation>
      <assemblyref ref="PetalFace"/>
  </transform>

  <transform>
    <transformation name="PlaceFirstEOS_OnPetalCore">
      <rotation zcos="1.0" angle="+(PetalCoreAngle+PetalEarAngle)/2"/>
      <translation x="(PetalEarOuterRadius -100)" z="+(PetalCoreThickness+5)/2" y="-17"/>
    </transformation>
    <logvolref ref="EOS"/>
  </transform>

  <transform>
    <transformation name="PlaceSecondEOS_OnPetalCore">
     <rotation zcos="1.0" angle="+(PetalCoreAngle+PetalEarAngle)/2"/>	      
     <translation x="(PetalEarOuterRadius -100)" z="-(PetalCoreThickness+5)/2" y="-17"/>
      
    </transformation>
    <logvolref ref="EOS"/>
  </transform>

</assembly>

<assembly name="PetalPair">
  <index ref="side" value="CNL_6"/>
  <transform name="Near">
    <transformation name="PlaceCastleNear">
      <translation z="-CastellationOffset"/>
    </transformation>
    <assemblyref ref="Petal" zeroid="true"/>
  </transform>

  <index ref="side" value="1 - CNL_6"/>
  <transform name="Far">
    <transformation name="PlaceCastleFar">
      <translation z="+CastellationOffset"/>
      <rotation zcos="1." angle="2*PI/NPetalsInWheel"/>
      <rotation xcos="1." angle="2*PI/2"/>
    </transformation>
    <assemblyref ref="Petal"/>
  </transform>

</assembly>

<assembly name="Wheel" alignable="true">
  <index ref="layer_wheel" value="CNL_3"/>
  <multicopy name="AddPetalPairsToWheel" n="NPetalsInWheel/2" >
    <transformation name="PlacePetalPairsToWheel">
      <rotation zcos="1." angle="2*PI/(NPetalsInWheel/2)"/>
    </transformation>
    <assemblyref ref="PetalPair"/>
  </multicopy>
  <transform>
    <transformation name="PlaceWheelSupport">
      <translation z="WheelSupportOffset"/>
    </transformation>
    <assemblyref ref="WheelSupport"/>
  </transform>
</assembly>

<assembly name="SCT_Forward" alignable ="true">
  <multicopy name="AddWheelsToEndcap" n="N_Wheels" loopvar="WheelZ" alignable="2">
    <transformation name="PlaceWheels" alignable="true">
      <translation z="WheelZ"/>
    </transformation>
    <assemblyref ref="Wheel"/>
  </multicopy>
  <transform>
    <transformation name="PlaceEC_Support">
      <translation z="StripEC_Z_Start + 0.5 + EC_InnerCylLength / 2."/>
    </transformation>
    <assemblyref ref="EC_Support"/>
  </transform>
</assembly>
