
&barreldefines;

<!-- CNL_n meanings for barrel:

    n    Meaning  Range
===================================  
    0    SCT         0
    1    SCTBarrel   0
    2    StripB      0
    3    Cylinder    0 (! All cylinders are unique, never copied)
    4    StavePair   0 - 72; depends on which barrel
    5    Stave       0 (! Always 0, since the two staves in a pair are different objects)
    6    StaveFace   0 (! Always 0, since the two faces are different)
    7    Sensor      0 - 12
-->

<!-- Warning: the densities below need rescaling if the core thicknesses change. -->
<materials>
  <material name="MatSSSupport" density="1.711"> <!-- This density tuned to get 2.5 % rad length per SS layer LB UG18 --> 
    <materialref ref="MatStaveSupport" fraction="1.0"/>
  </material>
  <material name="MatMSSupport" density="1.314"> <!-- This density tuned to get 2.0 % rad length per LS layer LB UG18 --> 
    <materialref ref="MatStaveSupport" fraction="1.0"/>
  </material>
</materials>

<shapes>
  <box name="ShStaveCore" xhalflength="StaveCoreLength/2" yhalflength="StaveCoreWidth/2" zhalflength="StaveCoreThickness/2 - EPS"/>
  <box name="ShEOSCore"   xhalflength="EOSCoreLength/2"   yhalflength="EOSCoreWidth/2"   zhalflength="EOSCoreThickness/2 - EPS"/>
  <union name="ShStavePlank">
    <shaperef ref="ShStaveCore"/>
    <transformation name="MoveEOS_ToCore">
      <translation x="(StaveCoreLength - EOSCoreLength)/2" y="(StaveCoreWidth + EOSCoreWidth)/2"/>
    </transformation>
    <shaperef ref="ShEOSCore"/>
  </union>

  <box name="ShStubCore" xhalflength="StubCoreLength/2" yhalflength="StubCoreWidth/2" zhalflength="StubCoreThickness/2 - EPS"/>

</shapes>

<logvol name="StaveCoreSS" shape="ShStavePlank" material="MatSSSupport"/>
<logvol name="StaveCoreMS" shape="ShStavePlank" material="MatMSSupport"/>
<logvol name="StubCore"  shape="ShStubCore"   material="MatMSSupport"/>

<assembly name="AxialSS_Face">
  <!-- NB First sensor is still centred at x = 0. Strips are on high-z side. -->
  <multicopy name="CopySS_InAxialFace" n="B_N_SensorsPerFace">
    <transformation name="PlaceSS_InAxialFace">
      <translation x="B_SensorGap + B_SensorLength"/>
    </transformation>
    <logvolref ref="BRLSensorSS"/>
  </multicopy>
</assembly>

<transformation name="StereoRot">
  <rotation zcos="1" angle="StereoAngle"/>
</transformation>

<assembly name="StereoSS_Face">
  <multicopy name="CopySS_InStereoFace" n="B_N_SensorsPerFace">
    <transformation name="PlaceSS_InStereoFace">
      <translation x="B_SensorGap + B_SensorLength"/>
    </transformation>
    <transform>
      <transformationref ref="StereoRot"/>
      <logvolref ref="BRLSensorSS"/>
    </transform>
  </multicopy>
</assembly>

<assembly name="AxialMS_Face">
  <multicopy name="CopyMS_InAxialFace" n="B_N_SensorsPerFace">
    <transformation name="PlaceMS_InAxialFace">
      <translation x="B_SensorGap + B_SensorLength"/>
    </transformation>
    <logvolref ref="BRLSensorMS"/>
  </multicopy>
</assembly>

<assembly name="StereoMS_Face">
  <multicopy name="CopyMS_InStereoFace" n="B_N_SensorsPerFace">
    <transformation name="PlaceMS_InStereoFace">
      <translation x="B_SensorGap + B_SensorLength"/>
    </transformation>
    <transform>
      <transformationref ref="StereoRot"/>
      <logvolref ref="BRLSensorMS"/>
    </transform>
  </multicopy>
</assembly>

<assembly name="AxialStubFace">
  <multicopy name="CopyMS_InAxialStubFace" n="B_N_SensorsPerStubFace">
    <transformation name="PlaceMS_InAxialStubFace">
      <translation x="B_SensorGap + B_SensorLength"/>
    </transformation>
    <logvolref ref="BRLSensorMS"/>
  </multicopy>
</assembly>

<assembly name="StereoStubFace">
  <multicopy name="CopyMS_InStereoStubFace" n="B_N_SensorsPerStubFace">
    <transformation name="PlaceMS_InStereoStubFace">
      <translation x="B_SensorGap + B_SensorLength"/>
    </transformation>
    <transform>
      <transformationref ref="StereoRot"/>
      <logvolref ref="BRLSensorMS"/>
    </transform>
  </multicopy>
</assembly>

<assembly name="SS_StaveAxialU"> <!-- Name refers to its local frame; turning it over changes it... -->
  <logvolref ref="StaveCoreSS"/>
  <index ref="side" value="(layer_wheel == 0 || layer_wheel == 2) * 0 + (layer_wheel == 1) * 1"/>
  <transform>
    <transformation name="PlaceAxialSS_FaceOnAxialUCore">
      <translation x="-((B_N_SensorsPerFace - 1) / 2 * (B_SensorLength + B_SensorGap))" 
                   z="-(StaveCoreThickness + SensorThickness)/2"/>
      <rotation xcos="1" angle="PI"/> <!-- Strips on low-z side -->
    </transformation>
    <assemblyref ref="AxialSS_Face" zeroid="true"/>
  </transform>
  <index ref="side" value="(layer_wheel == 0 || layer_wheel == 2) * 1 + (layer_wheel == 1) * 0"/>
  <transform>
    <transformation name="PlaceStereoSS_FaceOnAxialUCore">
      <translation x="-((B_N_SensorsPerFace - 1) / 2 * (B_SensorLength + B_SensorGap))" 
                   z="+(StaveCoreThickness + SensorThickness)/2"/>
    </transformation>
    <assemblyref ref="StereoSS_Face" zeroid="true"/>
  </transform>
</assembly>

<assembly name="SS_StaveVAxial">
  <logvolref ref="StaveCoreSS"/>
  <index ref="side" value="(layer_wheel == 0 || layer_wheel == 2) * 0 + (layer_wheel == 1) * 1"/>
  <transform>
    <transformation name="PlaceAxialSS_FaceOnVAxialCore">
      <translation x="-((B_N_SensorsPerFace - 1) / 2 * (B_SensorLength + B_SensorGap))" 
                   z="+(StaveCoreThickness + SensorThickness)/2"/>
    </transformation>
    <assemblyref ref="AxialSS_Face" zeroid="true"/>
  </transform>
  <index ref="side" value="(layer_wheel == 0 || layer_wheel == 2) * 1 + (layer_wheel == 1) * 0"/>
  <transform>
    <transformation name="PlaceStereoSS_FaceOnVAxialCore">
      <translation x="-((B_N_SensorsPerFace - 1) / 2 * (B_SensorLength + B_SensorGap))" 
                   z="-(StaveCoreThickness + SensorThickness)/2"/>
      <rotation xcos="1" angle="PI"/> <!-- Strips on low-z side and turn u to v -->
    </transformation>
    <assemblyref ref="StereoSS_Face" zeroid="true"/>
  </transform>
</assembly>

<assembly name="MS_StaveAxialU"> <!-- Name refers to its local frame; turning it over changes it... -->
  <logvolref ref="StaveCoreMS"/>
  <index ref="side" value="(layer_wheel == 5) * 0 + (layer_wheel == 3) * 1"/>
  <transform>
    <transformation name="PlaceAxialMS_FaceOnAxialUCore">
      <translation x="-((B_N_SensorsPerFace - 1) / 2 * (B_SensorLength + B_SensorGap))" 
                   z="-(StaveCoreThickness + SensorThickness)/2"/>
      <rotation xcos="1" angle="PI"/> <!-- Strips on low-z side -->
    </transformation>
    <assemblyref ref="AxialMS_Face" zeroid="true"/>
  </transform>
  <index ref="side" value="(layer_wheel == 5) * 1 + (layer_wheel == 3) * 0"/>
  <transform>
    <transformation name="PlaceStereoMS_FaceOnAxialUCore">
      <translation x="-((B_N_SensorsPerFace - 1) / 2 * (B_SensorLength + B_SensorGap))" 
                   z="+(StaveCoreThickness + SensorThickness)/2"/>
    </transformation>
    <assemblyref ref="StereoMS_Face" zeroid="true"/>
  </transform>
</assembly>

<assembly name="MS_StaveVAxial">
  <logvolref ref="StaveCoreMS"/>
  <index ref="side" value="(layer_wheel == 5) * 0 + (layer_wheel == 3) * 1"/>
  <transform>
    <transformation name="PlaceAxialMS_FaceOnVAxialCore">
      <translation x="-((B_N_SensorsPerFace - 1) / 2 * (B_SensorLength + B_SensorGap))" 
                   z="+(StaveCoreThickness + SensorThickness)/2"/>
    </transformation>
    <assemblyref ref="AxialMS_Face" zeroid="true"/>
  </transform>
  <index ref="side" value="(layer_wheel == 5) * 1 + (layer_wheel == 3) * 0"/>
  <transform>
    <transformation name="PlaceStereoMS_FaceOnVAxialCore">
      <translation x="-((B_N_SensorsPerFace - 1) / 2 * (B_SensorLength + B_SensorGap))" 
                   z="-(StaveCoreThickness + SensorThickness)/2"/>
      <rotation xcos="1" angle="PI"/> <!-- Strips on low-z side and turn u to v -->
    </transformation>
    <assemblyref ref="StereoMS_Face" zeroid="true"/>
  </transform>
</assembly>

<assembly name="StubAxialU"> 
  <logvolref ref="StubCore"/>
  <index ref="side" value="0"/>
  <transform>
    <transformation name="PlaceAxialStubFaceOnAxialUStub">
      <translation x="-((B_N_SensorsPerStubFace - 1) / 2 * (B_SensorLength + B_SensorGap))" 
                   z="-(StubCoreThickness + SensorThickness)/2"/>
      <rotation xcos="1" angle="PI"/> <!-- Strips on low-z side -->
    </transformation>
    <assemblyref ref="AxialStubFace" zeroid="true"/>
  </transform>
  <index ref="side" value="1"/>
  <transform>
    <transformation name="PlaceStereoStubFaceOnAxialUStub">
      <translation x="-((B_N_SensorsPerStubFace - 1) / 2 * (B_SensorLength + B_SensorGap))" 
                   z="+(StaveCoreThickness + SensorThickness)/2"/>
    </transformation>
    <assemblyref ref="StereoStubFace" zeroid="true"/>
  </transform>
</assembly>

<assembly name="StubVAxial">
  <logvolref ref="StubCore"/>
  <index ref="side" value="1"/>
  <transform>
    <transformation name="PlaceAxialStubFaceOnVAxialCore">
      <translation x="-((B_N_SensorsPerStubFace - 1) / 2 * (B_SensorLength + B_SensorGap))" 
                   z="+(StaveCoreThickness + SensorThickness)/2"/>
    </transformation>
    <assemblyref ref="AxialStubFace" zeroid="true"/>
  </transform>
  <index ref="side" value="0"/>
  <transform>
    <transformation name="PlaceStereoStubFaceOnVAxialCore">
      <translation x="-((B_N_SensorsPerStubFace - 1) / 2 * (B_SensorLength + B_SensorGap))" 
                   z="-(StaveCoreThickness + SensorThickness)/2"/>
      <rotation xcos="1" angle="PI"/> <!-- Strips on low-z side and turn u to v -->
    </transformation>
    <assemblyref ref="StereoStubFace" zeroid="true"/>
  </transform>
</assembly>

<assembly name="StavePair0_2">
  <index ref="eta_module" value="-(CNL_7 + 1)"/> 
  <transform>
    <transformation name="PlacePlusZ_SS_AxialUStave">
      <translation x="StaveGapZ0 + StaveCoreLength/2"/>
    </transformation>
    <assemblyref ref="SS_StaveAxialU" zeroid="true"/>
  </transform>
  <index ref="eta_module" value="CNL_7 + 1"/> 
  <transform>
    <transformation name="PlaceMinusZ_SS_VAxialStave">
      <translation x="-(StaveGapZ0 + StaveCoreLength/2)"/>
      <rotation ycos="1" angle="PI"/>
    </transformation>
    <assemblyref ref="SS_StaveVAxial" zeroid="true"/>
  </transform>
</assembly>

<assembly name="StavePair1">
  <index ref="eta_module" value="-(CNL_7 + 1)"/> 
  <transform>
    <transformation name="PlacePlusZ_SS_VAxialStave">
      <translation x="StaveGapZ0 + StaveCoreLength/2"/>
    </transformation>
    <assemblyref ref="SS_StaveVAxial" zeroid="true"/>
  </transform>
  <index ref="eta_module" value="CNL_7 + 1"/> 
  <transform>
    <transformation name="PlaceMinusZ_SS_AxialUStave">
      <translation x="-(StaveGapZ0 + StaveCoreLength/2)"/>
      <rotation ycos="1" angle="PI"/>
    </transformation>
    <assemblyref ref="SS_StaveAxialU" zeroid="true"/>
  </transform>
</assembly>

<assembly name="StavePair3">
  <index ref="eta_module" value="-(CNL_7 + 1)"/> 
  <transform>
    <transformation name="PlacePlusZ_MS_VAxialStave">
      <translation x="StaveGapZ0 + StaveCoreLength/2"/>
    </transformation>
    <assemblyref ref="MS_StaveVAxial" zeroid="true"/>
  </transform>
  <index ref="eta_module" value="CNL_7 + 1"/>
  <transform>
    <transformation name="PlaceMinusZ_MS_AxialUStave">
      <translation x="-(StaveGapZ0 + StaveCoreLength/2)"/>
      <rotation ycos="1" angle="PI"/>
    </transformation>
    <assemblyref ref="MS_StaveAxialU" zeroid="true"/>
  </transform>
</assembly>

<assembly name="StavePair4">
  <index ref="eta_module" value="-(CNL_7 + 1)"/>
  <transform>
    <transformation name="PlacePlusZ_MS_AxialUStave">
      <translation x="StaveGapZ0 + StaveCoreLength/2"/>
    </transformation>
    <assemblyref ref="MS_StaveAxialU" zeroid="true"/>
  </transform>
  <index ref="eta_module" value="CNL_7 + 1"/>
  <transform>
    <transformation name="PlaceMinusZAxialUStave">
      <translation x="-(StaveGapZ0 + StaveCoreLength/2)"/>
      <rotation ycos="1" angle="PI"/>
    </transformation>
    <assemblyref ref="MS_StaveVAxial" zeroid="true"/>
  </transform>
</assembly>

<assembly name="StubPair">
  <index ref="eta_module" value="-(CNL_7 + 1)"/>
  <transform>
    <transformation name="PlacePlusZ_Stub">
      <translation x="StaveGapZ0 + StaveCoreLength - StubCoreLength/2"/>
    </transformation>
    <assemblyref ref="StubAxialU" zeroid="true"/>
  </transform>
  <index ref="eta_module" value="CNL_7 + 1"/>
  <transform>
    <transformation name="PlaceMinusZ_Stub">
      <translation x="-(StaveGapZ0 + StaveCoreLength - StubCoreLength/2)"/>
      <rotation ycos="1" angle="PI"/>
    </transformation>
    <assemblyref ref="StubVAxial" zeroid="true"/>
  </transform>
</assembly>

<assembly name="Barrel0">
  <index ref="layer_wheel" value="0"/>
  <multicopy name="PlaceStavesB0" n="N_StavesInCyl_0">
    <transformation name="XfStavesB0">
      <rotation zcos="1" angle="2 * PI / N_StavesInCyl_0"/>
    </transformation>
    <transform>
      <transformation name="XfStave0ReadyForCopying">
        <!-- Rotate half a notch so x = 0 passes through edges not centres (as in standard LoI) --> 
        <rotation zcos="1" angle="PI / N_StavesInCyl_0"/>
        <translation x="CylRadius_0"/>
        <rotation zcos="1" angle="-TiltAngle_0"/> 
        <rotation ycos="1" angle="PI/2"/>       
      </transformation>
      <assemblyref ref="StavePair0_2"/>
    </transform>
  </multicopy>
</assembly>

<assembly name="Barrel1">
  <index ref="layer_wheel" value="1"/>
  <multicopy name="PlaceStavesB1" n="N_StavesInCyl_1">
    <transformation name="XfStavesB1">
      <rotation zcos="1" angle="2 * PI / N_StavesInCyl_1"/>
    </transformation>
    <transform>
      <transformation name="XfStave1ReadyForCopying">
        <!-- Rotate half a notch so x = 0 passes through edges not centres (as in standard LoI) --> 
        <rotation zcos="1" angle="PI / N_StavesInCyl_1"/>
        <translation x="CylRadius_1"/>
        <rotation zcos="1" angle="-TiltAngle_1"/> 
        <rotation ycos="1" angle="PI/2"/>       
      </transformation>
      <assemblyref ref="StavePair1"/>
    </transform>
  </multicopy>
</assembly>

<assembly name="Barrel2">
  <index ref="layer_wheel" value="2"/>
  <multicopy name="PlaceStavesB2" n="N_StavesInCyl_2">
    <transformation name="XfStavesB2">
      <rotation zcos="1" angle="2 * PI / N_StavesInCyl_2"/>
    </transformation>
    <transform>
      <transformation name="XfStave2ReadyForCopying">
        <!-- Rotate half a notch so x = 0 passes through edges not centres (as in standard LoI) --> 
        <rotation zcos="1" angle="PI / N_StavesInCyl_2"/>
        <translation x="CylRadius_2"/>
        <rotation zcos="1" angle="-TiltAngle_2"/> 
        <rotation ycos="1" angle="PI/2"/>       
      </transformation>
      <assemblyref ref="StavePair0_2"/>
    </transform>
  </multicopy>
</assembly>

<assembly name="Barrel3">
  <index ref="layer_wheel" value="3"/>
  <multicopy name="PlaceStavesB3" n="N_StavesInCyl_3">
    <transformation name="XfStavesB3">
      <rotation zcos="1" angle="2 * PI / N_StavesInCyl_3"/>
    </transformation>
    <transform>
      <transformation name="XfStave3ReadyForCopying">
        <!-- Rotate half a notch so x = 0 passes through edges not centres (as in standard LoI) --> 
        <rotation zcos="1" angle="PI / N_StavesInCyl_3"/>
        <translation x="CylRadius_3"/>
        <rotation zcos="1" angle="-TiltAngle_3"/> 
        <rotation ycos="1" angle="PI/2"/>       
      </transformation>
      <assemblyref ref="StavePair3"/>
    </transform>
  </multicopy>
</assembly>

<assembly name="Barrel4">
  <index ref="layer_wheel" value="5"/>
  <multicopy name="PlaceStavesB4" n="N_StavesInCyl_4">
    <transformation name="XfStavesB4">
      <rotation zcos="1" angle="2 * PI / N_StavesInCyl_4"/>
    </transformation>
    <transform>
      <transformation name="XfStave4ReadyForCopying">
        <!-- Rotate half a notch so x = 0 passes through edges not centres (as in standard LoI) --> 
        <rotation zcos="1" angle="PI / N_StavesInCyl_4"/>
        <translation x="CylRadius_4"/>
        <rotation zcos="1" angle="-TiltAngle_4"/> 
        <rotation ycos="1" angle="PI/2"/>       
      </transformation>
      <assemblyref ref="StavePair4"/>
    </transform>
  </multicopy>
</assembly>

<assembly name="StubBarrel">
  <index ref="layer_wheel" value="4"/>
  <multicopy name="PlaceStubStaves" n="N_StubsInCyl">
    <transformation name="XfStubsToStubBarrel">
      <rotation zcos="1" angle="2 * PI / N_StubsInCyl"/>
    </transformation>
    <transform>
      <transformation name="XfStubReadyForCopying">
        <!-- Rotate half a notch so x = 0 passes through edges not centres (as in standard LoI) --> 
        <rotation zcos="1" angle="PI / N_StubsInCyl"/>
        <translation x="StubRadius"/>
        <rotation zcos="1" angle="-TiltAngle_4"/> 
        <rotation ycos="1" angle="PI/2"/>       
      </transformation>
      <assemblyref ref="StubPair"/>
    </transform>
  </multicopy>
</assembly>

<assembly name="StripB">
  <index ref="phi_module" value="CNL_4"/> 
  <assemblyref ref="Barrel0"/>
  <assemblyref ref="Barrel1"/>
  <assemblyref ref="Barrel2"/>
  <assemblyref ref="Barrel3"/>
  <assemblyref ref="StubBarrel"/>
  <assemblyref ref="Barrel4"/>
</assembly>
