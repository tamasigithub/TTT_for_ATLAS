&barreldefines;

<!-- CNL_n meanings for barrel:

    n    Meaning  Range
===================================  
    0    SCT         0
    1    SCTBarrel   0
    2    StripB      0
    3    Cylinder    0 (! All cylinders are unique, never copied)
    4    StavePair   0 - 72; depends on which barrel
    5    Stave       0 - 1 
    6    StaveFace   0 - 1 
    7    Module      0 - 13
    8    Sensor      0
-->

&barrelsupports;
&stave;
&barrelhybrids;
<shapes>

  <tube name="shInnerPolyMod" rmin="StripB_OuterRadius - InnerPolyModThickness" rmax="StripB_OuterRadius - 3 * EPS" 
                              zhalflength="InnerPolyModHalfLength"/>

  <tube name="shBarrel0" rmin="StripInnerRadius + EPS" rmax="CylRadius_0 + CylEnvelopeThO" 
                         zhalflength="StripB_HalfLength - EPS"/>
  <tube name="shBarrel1" rmin="CylRadius_1 - CylEnvelopeThI" rmax="CylRadius_1 + CylEnvelopeThO" 
                         zhalflength="StripB_HalfLength - EPS"/>
  <tube name="shBarrel2" rmin="CylRadius_2 - CylEnvelopeThI" rmax="CylRadius_2 + CylEnvelopeThO" 
                         zhalflength="StripB_HalfLength - EPS"/>
  <tube name="shBarrel3" rmin="CylRadius_3 - CylEnvelopeThI" rmax="StripB_OuterRadius - 2 * EPS" 
                         zhalflength="StripB_HalfLength - EPS"/>

</shapes>

<transformation name="StereoRot">
  <rotation zcos="1" angle="StereoAngle"/>
</transformation>

<transformation name="RotateModulePowerEnd">
  <rotation zcos="1" angle="PI + StereoAngle"/>
</transformation>

<!-- GeoModelXml input created by ConsolidX version 1.100000 for BarrelEOSBoard, version 1.0. -->

<materials>

  <material name='matEOS' density='1.052352'>
    <elementref ref='Carbon'    fraction='0.103183'/>
    <elementref ref='Copper'    fraction='0.393132'/>
    <elementref ref='Hydrogen'  fraction='0.009621'/>
    <elementref ref='Oxygen'    fraction='0.266262'/>
    <elementref ref='Silicon'   fraction='0.215452'/>
    <elementref ref='Tin'       fraction='0.012349'/>
  </material>

</materials>

<shapes>
    <box name='shEOS' xhalflength='100/2' yhalflength='45/2' zhalflength='5/2'/>
</shapes>

<logvol name='EOS' shape='shEOS' material='matEOS'/>

<assembly name="SS_Module">

  <transform alignable="0">
    <transformation name="BRLSensorSSdummy" alignable="true">
      <translation/>
    </transformation>
    <logvolref ref="BRLSensorSS"/>
  </transform>  

  <transform>
    <transformation name="PlaceNearHybridSS">
      <translation x="B_HybridX_Offset + B_HybridW / 2" z="(SensorThickness + B_HybridT) / 2."/>
    </transformation>
    <assemblyref ref="B_HybridNear"/>
  </transform>

  <transform>
    <transformation name="PlaceFarHybridSS">
      <translation x="-(B_HybridX_Offset + B_HybridW / 2)" z="(SensorThickness + B_HybridT) / 2."/>
    </transformation>
    <assemblyref ref="B_HybridFar"/>
  </transform>

  <transform>
    <transformation name="PlaceDCDC_PCB_SS">
      <translation y="-(B_SensorWidth - DCDC_PCB_L) / 2." z="(SensorThickness + DCDC_PCB_T) / 2."/>
    </transformation>
    <logvolref ref="DCDC_PCB"/>
  </transform>

  <transform>
    <transformation name="PlaceDCDC_Box_SS">
      <translation y="-(B_SensorWidth - DCDC_PCB_L - DCDC_PCB_L + DCDC_BoxL) / 2." 
                   z="(SensorThickness + DCDC_BoxT) / 2. + DCDC_PCB_T"/>
    </transformation>
    <logvolref ref="DCDC_Box"/>
  </transform>

</assembly>

<assembly name="MS_Module">


  <transform alignable="0">
    <transformation name="BRLSensorMSdummy" alignable="true">
      <translation/>
    </transformation>
    <logvolref ref="BRLSensorMS"/>
  </transform>  

  <transform>
    <transformation name="PlaceNearHybridMS">
      <translation x="B_HybridX_Offset + B_HybridW / 2" z="(SensorThickness + B_HybridT) / 2."/>
    </transformation>
    <assemblyref ref="B_HybridNear"/>
  </transform>

  <transform>
    <transformation name="PlaceDCDC_PCB_MS">
      <translation y="-(B_SensorWidth - DCDC_PCB_L) / 2." z="(SensorThickness + DCDC_PCB_T) / 2."/>
    </transformation>
    <logvolref ref="DCDC_PCB"/>
  </transform>

  <transform>
    <transformation name="PlaceDCDC_Box_MS">
      <translation y="-(B_SensorWidth - DCDC_PCB_L - DCDC_PCB_L + DCDC_BoxL) / 2." 
                   z="(SensorThickness + DCDC_BoxT) / 2. + DCDC_PCB_T"/>
    </transformation>
    <logvolref ref="DCDC_Box"/>
  </transform>

</assembly>

<assembly name="SS_FaceL">
  <index ref="side" value="CNL_5"/> 
  <multicopy name="CopySS_InStereoFaceL" n="B_N_SensorsPerFace">
    <transformation name="PlaceSS_InStereoFaceL">
      <translation x="B_SensorGap + B_SensorLength"/>
    </transformation>
    <transform>
      <transformationref ref="StereoRot"/>
      <assemblyref ref="SS_Module"/>
    </transform>
  </multicopy>
</assembly>

<assembly name="SS_FaceR"> <!-- Modules rotated 180 deg cf L version -->
  <index ref="side" value="1 - CNL_5"/> 
  <multicopy name="CopySS_InStereoFaceR" n="B_N_SensorsPerFace">
    <transformation name="PlaceSS_InStereoFaceR">
      <translation x="B_SensorGap + B_SensorLength"/>
    </transformation>
    <transform>
      <transformationref ref="RotateModulePowerEnd"/>
      <assemblyref ref="SS_Module"/>
    </transform>
  </multicopy>
</assembly>

<assembly name="MS_FaceL">
  <index ref="side" value="CNL_5"/> 
  <multicopy name="CopyMS_InStereoFaceL" n="B_N_SensorsPerFace">
    <transformation name="PlaceMS_InStereoFaceL">
      <translation x="B_SensorGap + B_SensorLength"/>
    </transformation>
    <transform>
      <transformationref ref="StereoRot"/>
      <assemblyref ref="MS_Module"/>
    </transform>
  </multicopy>
</assembly>

<assembly name="MS_FaceR">
  <index ref="side" value="1 - CNL_5"/> 
  <multicopy name="CopyMS_InStereoFaceR" n="B_N_SensorsPerFace">
    <transformation name="PlaceMS_InStereoFaceR">
      <translation x="B_SensorGap + B_SensorLength"/>
    </transformation>
    <transform>
      <transformationref ref="RotateModulePowerEnd"/>
      <assemblyref ref="MS_Module"/>
    </transform>
  </multicopy>
</assembly>

<assembly name="SS_Stave"> 
  <assemblyref ref="StaveCoreSS"/>
  <transform>
    <transformation name="PlaceFirstSS_FaceOnCore">
      <translation x="StaveFaceTranslation" 
                   z="-(StavePlankT + SensorThickness)/2"/>
      <rotation xcos="1" angle="PI"/> <!-- Strips on low-z side -->
    </transformation>
    <assemblyref ref="SS_FaceR" zeroid="true"/>
  </transform>
  <transform>
    <transformation name="PlaceSecondSS_FaceOnCore">
      <translation x="StaveFaceTranslation" 
                   z="+(StavePlankT + SensorThickness)/2"/>
    </transformation>
    <assemblyref ref="SS_FaceL"/>
  </transform>

  <transform>
    <transformation name="PlaceFirstEOS_OnSS_Core">
      <translation x="(StaveCoreLength - 100.)/2"
                   y="(StaveCoreWidth + EOSCoreWidth)/2" 
                   z="-(StavePlankT + 5.)/2"/>
    </transformation>
    <logvolref ref="EOS"/>
  </transform>
  <transform>
    <transformation name="PlaceSecondEOS_OnSS_Core">
      <translation x="(StaveCoreLength - 100.)/2"
                   y="(StaveCoreWidth + EOSCoreWidth)/2" 
                   z="+(StavePlankT + 5.)/2"/>
    </transformation>
    <logvolref ref="EOS"/>
  </transform>

</assembly>

<assembly name="MS_Stave"> 
  <assemblyref ref="StaveCoreMS"/>

  <transform>
    <transformation name="PlaceFirstMS_FaceOnCore">
      <translation x="StaveFaceTranslation" 
                   z="-(StavePlankT + SensorThickness)/2"/>
      <rotation xcos="1" angle="PI"/> <!-- Strips on low-z side -->
    </transformation>
    <assemblyref ref="MS_FaceR" zeroid="true"/>
  </transform>

  <transform>
    <transformation name="PlaceSecondMS_FaceOnCore">
      <translation x="StaveFaceTranslation" 
                   z="+(StavePlankT + SensorThickness)/2"/>
    </transformation>
    <assemblyref ref="MS_FaceL"/>
  </transform>

  <transform>
    <transformation name="PlaceFirstEOS_OnMS_Core">
      <translation x="(StaveCoreLength - 100.)/2"
                   y="(StaveCoreWidth + EOSCoreWidth)/2" 
                   z="-(StavePlankT + 5.)/2"/>
    </transformation>
    <logvolref ref="EOS"/>
  </transform>
  <transform>
    <transformation name="PlaceSecondEOS_OnMS_Core">
      <translation x="(StaveCoreLength - 100.)/2"
                   y="(StaveCoreWidth + EOSCoreWidth)/2" 
                   z="+(StavePlankT + 5.)/2"/>
    </transformation>
    <logvolref ref="EOS"/>
  </transform>

</assembly>

<assembly name="StavePairSS">

  <index ref="eta_module" value="CNL_7 + 1"/> 
  <transform>
    <transformation name="PlacePlusZ_SS_Stave">
      <translation x="StaveGapZ0 + StaveCoreLength/2"/>
    </transformation>
    <assemblyref ref="SS_Stave" zeroid="true"/>
  </transform>

  <multicopy name="CopyStaveMountsSS_Plus" n="NumStaveMounts">
    <transformation name="PlaceStaveMountsSS_Plus">
      <translation x="(StaveCoreLength - 2 * StaveMountL - 2 * 25.) / (NumStaveMounts - 1)"/>
    </transformation>
    <transform>
      <transformation name="PlaceStaveMountReadySS_PlusForCopying">
        <translation x="25. + StaveGapZ0" 
                     y="-(StaveCoreWidth/2 + StaveMountR)"
                     z="StaveMountR/2"/>
        <rotation ycos="1" angle="PI/2"/>
      </transformation>
      <logvolref ref="StaveMount"/>
    </transform>
  </multicopy>

  <index ref="eta_module" value="-(CNL_7 + 1)"/> 
  <transform>
    <transformation name="PlaceMinusZ_SS_Stave">
      <translation x="-(StaveGapZ0 + StaveCoreLength/2)"/>
      <rotation ycos="1" angle="PI"/>
    </transformation>
    <assemblyref ref="SS_Stave"/>
  </transform>

  <multicopy name="CopyStaveMountsSS_Minus" n="NumStaveMounts">
    <transformation name="PlaceStaveMountsSS_Minus">
      <translation x="-(StaveCoreLength - 2 * StaveMountL - 2 * 25.) / (NumStaveMounts - 1)"/>
    </transformation>
    <transform>
      <transformation name="PlaceStaveMountSS_MinusReadyForCopying">
        <translation x="-(25. + StaveGapZ0)" 
                     y="-(StaveCoreWidth/2 + StaveMountR)"
                     z="StaveMountR/2"/>
        <rotation ycos="1" angle="-PI/2"/>
      </transformation>
      <logvolref ref="StaveMount"/>
    </transform>
  </multicopy>

</assembly>

<assembly name="StavePairMS">

  <index ref="eta_module" value="CNL_7 + 1"/> 
  <transform>
    <transformation name="PlacePlusZ_MS_Stave">
      <translation x="StaveGapZ0 + StaveCoreLength/2"/>
    </transformation>
    <assemblyref ref="MS_Stave" zeroid="true"/>
  </transform>

  <multicopy name="CopyStaveMountsMS_Plus" n="NumStaveMounts">
    <transformation name="PlaceStaveMountsMS_Plus">
      <translation x="(StaveCoreLength - 2 * StaveMountL - 2 * 25.) / (NumStaveMounts - 1)"/>
    </transformation>
    <transform>
      <transformation name="PlaceStaveMountReadyMS_PlusForCopying">
        <translation x="25. + StaveGapZ0" 
                     y="-(StaveCoreWidth/2 + StaveMountR)"
                     z="StaveMountR/2"/>
        <rotation ycos="1" angle="PI/2"/>
      </transformation>
      <logvolref ref="StaveMount"/>
    </transform>
  </multicopy>

  <index ref="eta_module" value="-(CNL_7 + 1)"/>
  <transform>
    <transformation name="PlaceMinusZ_MS_Stave">
      <translation x="-(StaveGapZ0 + StaveCoreLength/2)"/>
      <rotation ycos="1" angle="PI"/>
    </transformation>
    <assemblyref ref="MS_Stave"/>
  </transform>

  <multicopy name="CopyStaveMountsMS_Minus" n="NumStaveMounts">
    <transformation name="PlaceStaveMountsMS_Minus">
      <translation x="-(StaveCoreLength - 2 * StaveMountL - 2 * 25.) / (NumStaveMounts - 1)"/>
    </transformation>
    <transform>
      <transformation name="PlaceStaveMountMS_MinusReadyForCopying">
        <translation x="-(25. + StaveGapZ0)" 
                     y="-(StaveCoreWidth/2 + StaveMountR)"
                     z="StaveMountR/2"/>
        <rotation ycos="1" angle="-PI/2"/>
      </transformation>
      <logvolref ref="StaveMount"/>
    </transform>
  </multicopy>

</assembly>

<logvol name="Barrel0" shape="shBarrel0" material="N2" alignable="true">
  <index ref="layer_wheel" value="0"/>
  <multicopy name="PlaceStavesB0" n="N_StavesInCyl_0">
    <transformation name="XfStavesB0">
      <rotation zcos="1" angle="2 * PI / N_StavesInCyl_0"/>
    </transformation>
    <transform>
      <transformation name="XfStave0ReadyForCopying">
        <!-- Rotate half a notch so x = 0 passes through edges not centres (as in standard LoI) --> 
        <rotation zcos="1" angle="PI / N_StavesInCyl_0"/>
        <translation x="CylRadius_0"/>
        <rotation zcos="1" angle="-TiltAngle_0"/> 
        <rotation ycos="1" angle="-PI/2"/>       
      </transformation>
      <assemblyref ref="StavePairMS"/>
    </transform>
  </multicopy>

  <assemblyref ref="Barrel0Support"/>

</logvol>

<logvol name="Barrel1" shape="shBarrel1" material="N2" alignable="true">
  <index ref="layer_wheel" value="1"/>
  <multicopy name="PlaceStavesB1" n="N_StavesInCyl_1">
    <transformation name="XfStavesB1">
      <rotation zcos="1" angle="2 * PI / N_StavesInCyl_1"/>
    </transformation>
    <transform>
      <transformation name="XfStave1ReadyForCopying">
        <!-- Rotate half a notch so x = 0 passes through edges not centres (as in standard LoI) --> 
        <rotation zcos="1" angle="PI / N_StavesInCyl_1"/>
        <translation x="CylRadius_1"/>
        <rotation zcos="1" angle="-TiltAngle_1"/> 
        <rotation ycos="1" angle="-PI/2"/>       
      </transformation>
      <assemblyref ref="StavePairMS"/>
    </transform>
  </multicopy>

  <assemblyref ref="Barrel1Support"/>

</logvol>

<logvol name="Barrel2" shape="shBarrel2" material="N2" alignable="true">
  <index ref="layer_wheel" value="2"/>
  <multicopy name="PlaceStavesB2" n="N_StavesInCyl_2">
    <transformation name="XfStavesB2">
      <rotation zcos="1" angle="2 * PI / N_StavesInCyl_2"/>
    </transformation>
    <transform>
      <transformation name="XfStave2ReadyForCopying">
        <!-- Rotate half a notch so x = 0 passes through edges not centres (as in standard LoI) --> 
        <rotation zcos="1" angle="PI / N_StavesInCyl_2"/>
        <translation x="CylRadius_2"/>
        <rotation zcos="1" angle="-TiltAngle_2"/> 
        <rotation ycos="1" angle="-PI/2"/>       
      </transformation>
      <assemblyref ref="StavePairMS"/>
    </transform>
  </multicopy>

  <assemblyref ref="Barrel2Support"/>

</logvol>

<logvol name="Barrel3" shape="shBarrel3" material="N2" alignable="true">
  <index ref="layer_wheel" value="3"/>
  <multicopy name="PlaceStavesB3" n="N_StavesInCyl_3">
    <transformation name="XfStavesB3">
      <rotation zcos="1" angle="2 * PI / N_StavesInCyl_3"/>
    </transformation>
    <transform>
      <transformation name="XfStave3ReadyForCopying">
        <!-- Rotate half a notch so x = 0 passes through edges not centres (as in standard LoI) --> 
        <rotation zcos="1" angle="PI / N_StavesInCyl_3"/>
        <translation x="CylRadius_3"/>
        <rotation zcos="1" angle="-TiltAngle_3"/> 
        <rotation ycos="1" angle="-PI/2"/>       
      </transformation>
      <assemblyref ref="StavePairMS"/>
    </transform>
  </multicopy>
  <logvol name="InnerPolyMod" shape="shInnerPolyMod" material="BoratedPolyethylene"/>

  <assemblyref ref="Barrel3Support"/>

</logvol>

<assembly name="StripB">
  <index ref="phi_module" value="CNL_4"/>
  
  <transform alignable="2">
    <transformation name="Barrel0dummy" alignable="true">
      <translation/>
    </transformation>
    <logvolref ref="Barrel0"/>
  </transform>
  
  <transform alignable="2">
    <transformation name="Barrel1dummy" alignable="true">
      <translation/>
    </transformation>
    <logvolref ref="Barrel1"/>
  </transform>
  
  <transform alignable="2">
    <transformation name="Barrel2dummy" alignable="true">
      <translation/>
    </transformation>
    <logvolref ref="Barrel2"/>
  </transform>
  
  <transform alignable="2">
    <transformation name="Barrel3dummy" alignable="true">
      <translation/>
    </transformation>
    <logvolref ref="Barrel3"/>
  </transform>
  
<!--  
  <logvolref ref="Barrel0"/>
  <logvolref ref="Barrel1"/>
  <logvolref ref="Barrel2"/>
  <logvolref ref="Barrel3"/>
-->  

</assembly>

