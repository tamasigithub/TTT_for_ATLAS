<!-- Set up the Barrel Completion Layer. Do in a separate file so it is easy to remove. -->

&bcl_defines;
&bcl_supports;
&bcl_core;

<assembly name="BCL_Module">

  <logvolref ref="BRLSensorMS"/>

  <transform>
    <transformation name="PlaceHybridBCL">
      <translation x="-(B_HybridX_Offset + B_HybridW / 2)" z="(SensorThickness + B_HybridT) / 2."/>
    </transformation>
    <assemblyref ref="BCL_Hybrid"/>
  </transform>

  <transform>
    <transformation name="PlaceDCDC_PCB_OnBCL">
      <translation x="-(B_HybridX_Offset + B_HybridW + DCDC_PCB_W / 2)" 
                   y="B_HybridL/2 - BCL_HybridExtraL - 5.0 - DCDC_PCB_L/2"
                   z="(SensorThickness + DCDC_PCB_T) / 2."/>
    </transformation>
    <logvolref ref="DCDC_PCB"/>
  </transform>

  <transform>
    <transformation name="PlaceDCDC_Box">
      <translation x="-(B_HybridX_Offset + B_HybridW + DCDC_PCB_W / 2)"
                   z="(SensorThickness + DCDC_BoxT) / 2. + DCDC_PCB_T"/>
    </transformation>
    <logvolref ref="DCDC_Box"/>
  </transform>

</assembly>

<assembly name="BCL_Pair">
  <transform>
    <transformation name="PlaceLowModZ_BCL_Module">
      <translation x="-(B_SensorGap + B_SensorLength) / 2."/>
    </transformation>
    <assemblyref ref="BCL_Module" zeroid="true"/>
  </transform>
  <transform>
    <transformation name="PlaceHighModZ_BCL_Module">
      <translation x="(B_SensorGap + B_SensorLength) / 2."/>
      <rotation zcos="1" angle="PI"/>
    </transformation>
    <assemblyref ref="BCL_Module"/>
  </transform>
</assembly>

<assembly name="BCL_Face">
  <multicopy name="CopyBCL_PairsInBCL_Face" n="BCL_N_PairsPerFace">
    <transformation name="PlaceBCL_PairsInBCL_Face">
      <translation y="B_SensorGap + B_SensorWidth"/>
    </transformation>
    <transform>
      <transformationref ref="StereoRot"/>
      <assemblyref ref="BCL_Pair"/>
    </transform>
  </multicopy>
</assembly>

<assembly name="BCL_Stave">
  <transform>
    <transformation name="RotateBCL_CoreToFace">
      <rotation zcos="1." angle="PI/2"/>
    </transformation>
    <logvolref ref="BCL_Core"/>
  </transform>
  <transform>
    <transformation name="PlaceFirstBCL_FaceOnCore">
      <translation y="BCL_FaceTranslation"
                   z="-(BCL_CoreT + SensorThickness)/2"/>
      <rotation ycos="1" angle="PI"/> <!-- Strips on low-z side -->
    </transformation>
    <assemblyref ref="BCL_Face" zeroid="true"/>
  </transform>
  <transform>
    <transformation name="PlaceSecondBCL_FaceOnCore">
      <translation y="BCL_FaceTranslation"
                   z="+(BCL_CoreT + SensorThickness)/2"/>
    </transformation>
    <assemblyref ref="BCL_Face"/>
  </transform>

  <transform>
    <transformation name="PlaceFirstEOS_OnBCL_Core">
      <translation x="-(BCL_CoreW - 100.)/2"
                   y="(BCL_CoreL - 45.)/2"
                   z="-(BCL_CoreT + 5.)/2"/>
    </transformation>
    <logvolref ref="EOS"/>
  </transform>
  <transform>
    <transformation name="PlaceSecondEOS_OnBCL_Core">
      <translation x="-(BCL_CoreW - 100.)/2"
                   y="(BCL_CoreL - 45.)/2"
                   z="+(BCL_CoreT + 5.)/2"/>
    </transformation>
    <logvolref ref="EOS"/>
  </transform>

</assembly>

<assembly name="BCL_StaveA">
  <assemblyref ref="BCL_Stave"/>
  <transform>
    <transformation name="PlaceTripodOnStaveA">
      <rotation xcos="1" angle="180*DEG"/>
      <translation x="(BCL_CoreW + BCL_TrapT)/2" z="BCL_CoreT/2"/>
      <rotation zcos="1" angle="90*DEG"/> <!-- Core is rotated also by this -->
    </transformation>
    <assemblyref ref="BCL_Tripod"/>
  </transform>

  <transform>
    <transformation name="PlaceFront1OnStaveA">
      <translation y="BCL_CoreL/4" x="-(BCL_CoreW + BCL_FrontSupportT)/2" z="(BCL_FrontSupportL - BCL_CoreT)/2"/>
      <rotation zcos="1" angle="90*DEG"/> <!-- Core is rotated also by this -->
    </transformation>
    <logvolref ref="BCL_FrontSupport"/>
  </transform>

  <transform>
    <transformation name="PlaceFront2OnStaveA">
      <translation y="-BCL_CoreL/4" x="-(BCL_CoreW + BCL_FrontSupportW)/2" z="(BCL_FrontSupportL - BCL_CoreT)/2"/>
      <rotation zcos="1" angle="90*DEG"/>
      <rotation zcos="1" angle="90*DEG"/> <!-- Core is rotated also by this -->
    </transformation>
    <logvolref ref="BCL_FrontSupport"/>
  </transform>
</assembly>

<assembly name="BCL_StaveC">
  <assemblyref ref="BCL_Stave"/>
  <transform>
    <transformation name="PlaceTripodOnStaveC">
      <rotation ycos="1" angle="180*DEG"/>
      <translation x="(BCL_CoreW + BCL_TrapT)/2" z="BCL_CoreT/2"/>
      <rotation zcos="1" angle="90*DEG"/> <!-- Core is rotated also by this -->
    </transformation>
    <assemblyref ref="BCL_Tripod"/>
  </transform>

  <transform>
    <transformation name="PlaceFront1OnStaveC">
      <translation y="BCL_CoreL/4" x="(BCL_CoreW + BCL_FrontSupportT)/2" z="(BCL_FrontSupportL - BCL_CoreT)/2"/>
      <rotation zcos="1" angle="90*DEG"/> <!-- Core is rotated also by this -->
    </transformation>
    <logvolref ref="BCL_FrontSupport"/>
  </transform>

  <transform>
    <transformation name="PlaceFront2OnStaveC">
      <translation y="-BCL_CoreL/4" x="(BCL_CoreW + BCL_FrontSupportW)/2" z="(BCL_FrontSupportL - BCL_CoreT)/2"/>
      <rotation zcos="1" angle="90*DEG"/>
      <rotation zcos="1" angle="90*DEG"/> <!-- Core is rotated also by this -->
    </transformation>
    <logvolref ref="BCL_FrontSupport"/>
  </transform>
</assembly>

<assembly name="BCL_A">
  <index ref="side" value="CNL_6"/>                 <!-- Face number -->
  <index ref="phi_module" value="5*CNL_4 + CNL_7"/> <!-- 5 * stave number + module pair no. -->
  <index ref="eta_module" value="(CNL_6 == 1) * (14 - CNL_8) + (CNL_6 == 0) * (13 + CNL_8)"/>   <!-- 13 + module number -->
  <multicopy name="CopyBCL_A_Staves" n="BCL_N_Staves">
    <transformation name="PlaceBCL_A_Staves">
      <rotation zcos="1" angle="2 * PI / BCL_N_Staves"/>
    </transformation>
    <transform>
      <transformation name="BCL_A_ReadyForCopying">
        <!-- Rotate half a notch so x = 0 passes through edges not centres (as in standard LoI) -->
        <rotation zcos="1" angle="PI / BCL_N_Staves"/>
        <translation x="BCL_Radius"/>
        <rotation zcos="1" angle="-BCL_TiltAngle"/>
        <rotation ycos="1" angle="PI/2"/>
      </transformation>
      <assemblyref ref="BCL_StaveA"/>
    </transform>
  </multicopy>
</assembly>

<assembly name="BCL_C">
  <index ref="side" value="CNL_6"/>                 <!-- Face number -->
  <index ref="phi_module" value="5*CNL_4 + CNL_7"/> <!-- 5 * stave number + module pair no. -->
  <index ref="eta_module" value="-((CNL_6 == 1) * (13 + CNL_8) + (CNL_6 == 0) * (14 - CNL_8))"/>   <!-- 13 + module number -->
  <multicopy name="CopyBCL_C_Staves" n="BCL_N_Staves">
    <transformation name="PlaceBCL_C_Staves">
      <rotation zcos="1" angle="2 * PI / BCL_N_Staves"/>
    </transformation>
    <transform>
      <transformation name="BCL_C_ReadyForCopying">
        <!-- Rotate half a notch so x = 0 passes through edges not centres (as in standard LoI) -->
        <rotation zcos="1" angle="PI / BCL_N_Staves"/>
        <translation x="BCL_Radius"/>
        <rotation zcos="1" angle="-BCL_TiltAngle"/>
        <rotation ycos="1" angle="PI/2"/>
      </transformation>
      <assemblyref ref="BCL_StaveC"/>
    </transform>
  </multicopy>
</assembly>
